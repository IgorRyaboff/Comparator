
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытий
// Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгрузитьВОбъектXDTO(Ссылка) Экспорт
	ПравилоXDTO = ОбщегоНазначенияСравнитель.СоздатьОбъектXDTO(1, "ТаблицаДанных.ПравилоВыгрузки");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПравилаВыгрузкиТаблиц.МеханизмВыгрузки КАК МеханизмВыгрузки,
		|	ПравилаВыгрузкиТаблиц.ТекстЗапроса КАК ТекстЗапроса,
		|	ПравилаВыгрузкиТаблиц.ПередВыполнениемЗапроса КАК ПередВыполнениемЗапроса,
		|	ПравилаВыгрузкиТаблиц.ПриВыборкеИзРезультатаЗапроса КАК ПриВыборкеИзРезультатаЗапроса,
		|	ПравилаВыгрузкиТаблиц.ПослеВыполненияЗапроса КАК ПослеВыполненияЗапроса,
		|	ПравилаВыгрузкиТаблиц.ПриВыгрузкеПроизвольнымАлгоритмом КАК ПриВыгрузкеПроизвольнымАлгоритмом
		|ИЗ
		|	Справочник.ПравилаВыгрузкиТаблиц КАК ПравилаВыгрузкиТаблиц
		|ГДЕ
		|	ПравилаВыгрузкиТаблиц.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ПравилоXDTO, Выборка, "ТекстЗапроса, ПередВыполнениемЗапроса, ПриВыборкеИзРезультатаЗапроса
		    |, ПослеВыполненияЗапроса, ПриВыгрузкеПроизвольнымАлгоритмом");
		ПравилоXDTO.МеханизмВыгрузки = ОбщегоНазначения.ИмяЗначенияПеречисления(Выборка.МеханизмВыгрузки);
	КонецЦикла;
	
	ПравилоXDTO.Проверить();
	Возврат ПравилоXDTO;
КонецФункции

#КонецОбласти

#Область Инициализация

#КонецОбласти

#КонецЕсли
