
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() И Параметры.ЗначениеКопирования.Пустая() Тогда
		Справочники.ТаблицыДанных.ЗаполнитьНовыйОбъект(Объект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьКартинкиВидовПолей(Объект.Поля);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьКартинкиВидовПолей(Объект.Поля);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПоля

&НаКлиенте
Процедура ПоляПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	Если Копирование Тогда
		СтрПоля = Элемент.ТекущиеДанные;
		ТекущиеЗначения = Новый Структура("Имя, Синоним, ТипИсходногоЗначения, ТипЗначенияСравнения, ВидПоля
		        |, Обязательное, ПриПолученииЗначенияСравнения, ПриПолученииПредставления, ПриСравненииЗначений");
		ЗаполнитьЗначенияСвойств(ТекущиеЗначения, СтрПоля);
		ТекущиеЗначения.Вставить("НомерСтроки", 0);
		ПараметрыФормы.Вставить("ТекущиеЗначения", ТекущиеЗначения);
	КонецЕсли;
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеИзмененияДанныхПоля", ЭтотОбъект);
	ОткрытьФорму("Справочник.ТаблицыДанных.Форма.ФормаПоляТаблицы", ПараметрыФормы,,,,, ОповещениеОЗакрытии);
КонецПроцедуры

&НаКлиенте
Процедура ПоляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтрПоля = Элемент.ТекущиеДанные;
	
	ТекущиеЗначения = Новый Структура("НомерСтроки, Имя, Синоним, ТипИсходногоЗначения, ТипЗначенияСравнения, ВидПоля
	        |, Обязательное, ПриПолученииЗначенияСравнения, ПриПолученииПредставления, ПриСравненииЗначений");
	ЗаполнитьЗначенияСвойств(ТекущиеЗначения, СтрПоля);
	
	ПараметрыФормы = Новый Структура("ТекущиеЗначения", ТекущиеЗначения);
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеИзмененияДанныхПоля", ЭтотОбъект);
	ОткрытьФорму("Справочник.ТаблицыДанных.Форма.ФормаПоляТаблицы", ПараметрыФормы,,,,, ОповещениеОЗакрытии);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеИзмененияДанныхПоля(НовыеЗначения, ДополнительныеПараметры = Неопределено) Экспорт
	Если НовыеЗначения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НовыеЗначения.НомерСтроки = 0 Тогда
		СтрПоля = Объект.Поля.Добавить();
	Иначе
		СтрПоля = Объект.Поля.НайтиСтроки(Новый Структура("НомерСтроки", НовыеЗначения.НомерСтроки))[0];
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрПоля, НовыеЗначения);
	ЗаполнитьКартинкиВидовПолей(Объект.Поля);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьКартинкиВидовПолей(ТабличнаяЧасть)
	Для Каждого СтрПоля Из ТабличнаяЧасть Цикл
		Если СтрПоля.ВидПоля = ПредопределенноеЗначение("Перечисление.ВидыПолейТаблицДанных.Измерение") Тогда
			СтрПоля.ИндексКартинкиВидПоля = 0;
		ИначеЕсли СтрПоля.ВидПоля = ПредопределенноеЗначение("Перечисление.ВидыПолейТаблицДанных.Ресурс") Тогда
			СтрПоля.ИндексКартинкиВидПоля = 1;
		ИначеЕсли СтрПоля.ВидПоля = ПредопределенноеЗначение("Перечисление.ВидыПолейТаблицДанных.Реквизит") Тогда
			СтрПоля.ИндексКартинкиВидПоля = 2;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
